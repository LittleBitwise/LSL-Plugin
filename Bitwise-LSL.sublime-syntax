%YAML 1.2
---

name: Bitwise-LSL

file_extensions:
  - lsl

scope: source.lsl

version: 2

variables:
  validIdentifier: '(?:\b[_a-zA-Z]+\w*\b)'
  validIDENTIFIER: '(?:\b[_A-Z]+\w*\b)'

  validFloat: '(?:(?:\b[0-9]+\.[0-9]+\b)|(?:[0-9]+\.(?![0-9]))|(?:(?<!\w)\.[0-9]+))'
  validInteger: '(?:\b[0-9]+\b)'
  validHexadecimal: '(?:\b(?i:(0x[0-9a-f]+))\b(?!\.))'

  validSign: '(?:\+|\-)'
  validNumber: '(?:{{validSign}}?{{validInteger}}|{{validHexadecimal}}|{{validFloat}})'

  validTypes: '(?:\b(float|integer|key|list|rotation|string|vector)\b)'
  validEvents: '(?:\b(at_rot_target|at_target|attach|changed|collision|collision_end|collision_start|control|dataserver|email|experience_permissions|experience_permissions_denied|http_request|http_response|land_collision|land_collision_end|land_collision_start|link_message|linkset_data|listen|money|moving_end|moving_start|no_sensor|not_at_rot_target|not_at_target|object_rez|on_rez|path_update|remote_data|run_time_permissions|sensor|state_entry|state_exit|timer|touch|touch_end|touch_start|transaction_result)\b)'
  validFunctions: '(?:\b(llAbs|llAcos|llAddToLandBanList|llAddToLandPassList|llAdjustSoundVolume|llAgentInExperience|llAllowInventoryDrop|llAngleBetween|llApplyImpulse|llApplyRotationalImpulse|llAsin|llAtan2|llAttachToAvatar|llAttachToAvatarTemp|llAvatarOnLinkSitTarget|llAvatarOnSitTarget|llAxes2Rot|llAxisAngle2Rot|llBase64ToInteger|llBase64ToString|llBreakAllLinks|llBreakLink|llCSV2List|llCastRay|llCeil|llChar|llClearCameraParams|llClearExperiencePermissions|llClearLinkMedia|llClearPrimMedia|llCloseRemoteDataChannel|llCloud|llCollisionFilter|llCollisionSound|llCollisionSprite|llCos|llCreateCharacter|llCreateKeyValue|llCreateLink|llDataSizeKeyValue|llDeleteCharacter|llDeleteKeyValue|llDeleteSubList|llDeleteSubString|llDetachFromAvatar|llDetectedGrab|llDetectedGroup|llDetectedKey|llDetectedLinkNumber|llDetectedName|llDetectedOwner|llDetectedPos|llDetectedRot|llDetectedTouchBinormal|llDetectedTouchFace|llDetectedTouchNormal|llDetectedTouchPos|llDetectedTouchST|llDetectedTouchUV|llDetectedType|llDetectedVel|llDialog|llDie|llDumpList2String|llEdgeOfWorld|llEjectFromLand|llEmail|llEscapeURL|llEuler2Rot|llEvade|llExecCharacterCmd|llFabs|llFleeFrom|llFloor|llForceMouselook|llFrand|llGenerateKey|llGetAccel|llGetAgentInfo|llGetAgentLanguage|llGetAgentList|llGetAgentSize|llGetAlpha|llGetAndResetTime|llGetAnimation|llGetAnimationList|llGetAnimationOverride|llGetAttached|llGetAttachedList|llGetBoundingBox|llGetCameraPos|llGetCameraRot|llGetCenterOfMass|llGetClosestNavPoint|llGetColor|llGetCreator|llGetDate|llGetDayLength|llGetDayOffset|llGetDisplayName|llGetEnergy|llGetEnv|llGetEnvironment|llGetExperienceDetails|llGetExperienceErrorMessage|llGetExperienceList|llGetForce|llGetFreeMemory|llGetFreeURLs|llGetGMTclock|llGetGeometricCenter|llGetHTTPHeader|llGetInventoryAcquireTime|llGetInventoryCreator|llGetInventoryKey|llGetInventoryName|llGetInventoryNumber|llGetInventoryPermMask|llGetInventoryType|llGetKey|llGetLandOwnerAt|llGetLinkKey|llGetLinkMedia|llGetLinkName|llGetLinkNumber|llGetLinkNumberOfSides|llGetLinkPrimitiveParams|llGetListEntryType|llGetListLength|llGetLocalPos|llGetLocalRot|llGetMass|llGetMassMKS|llGetMaxScaleFactor|llGetMemoryLimit|llGetMinScaleFactor|llGetMoonDirection|llGetMoonRotation|llGetNextEmail|llGetNotecardLine|llGetNotecardLineSync|llGetNumberOfNotecardLines|llGetNumberOfPrims|llGetNumberOfSides|llGetObjectAnimationNames|llGetObjectDesc|llGetObjectDetails|llGetObjectLinkKey|llGetObjectMass|llGetObjectName|llGetObjectPermMask|llGetObjectPrimCount|llGetOmega|llGetOwner|llGetOwnerKey|llGetParcelDetails|llGetParcelFlags|llGetParcelMaxPrims|llGetParcelMusicURL|llGetParcelPrimCount|llGetParcelPrimOwners|llGetPermissions|llGetPermissionsKey|llGetPhysicsMaterial|llGetPos|llGetPrimMediaParams|llGetPrimitiveParams|llGetRegionAgentCount|llGetRegionCorner|llGetRegionDayLength|llGetRegionDayOffset|llGetRegionFPS|llGetRegionFlags|llGetRegionMoonDirection|llGetRegionMoonRotation|llGetRegionName|llGetRegionSunDirection|llGetRegionSunRotation|llGetRegionTimeDilation|llGetRegionTimeOfDay|llGetRootPosition|llGetRootRotation|llGetRot|llGetSPMaxMemory|llGetScale|llGetScriptName|llGetScriptState|llGetSimStats|llGetSimulatorHostname|llGetStartParameter|llGetStaticPath|llGetStatus|llGetSubString|llGetSunDirection|llGetSunRotation|llGetTexture|llGetTextureOffset|llGetTextureRot|llGetTextureScale|llGetTime|llGetTimeOfDay|llGetTimestamp|llGetTorque|llGetUnixTime|llGetUsedMemory|llGetUsername|llGetVel|llGetVisualParams|llGetWallclock|llGiveInventory|llGiveInventoryList|llGiveMoney|llGround|llGroundContour|llGroundNormal|llGroundRepel|llGroundSlope|llHMAC|llHTTPRequest|llHTTPResponse|llHash|llInsertString|llInstantMessage|llIntegerToBase64|llJson2List|llJsonGetValue|llJsonSetValue|llJsonValueType|llKey2Name|llKeyCountKeyValue|llKeysKeyValue|llLinear2sRGB|llLinkAdjustSoundVolume|llLinkParticleSystem|llLinkPlaySound|llLinkSetSoundQueueing|llLinkSetSoundRadius|llLinkSitTarget|llLinkStopSound|llLinksetDataAvailable|llLinksetDataCountKeys|llLinksetDataDelete|llLinksetDataDeleteProtected|llLinksetDataFindKeys|llLinksetDataListKeys|llLinksetDataRead|llLinksetDataReadProtected|llLinksetDataReset|llLinksetDataWrite|llLinksetDataWriteProtected|llList2CSV|llList2Float|llList2Integer|llList2Json|llList2Key|llList2List|llList2ListStrided|llList2Rot|llList2String|llList2Vector|llListFindList|llListInsertList|llListRandomize|llListReplaceList|llListSort|llListStatistics|llListen|llListenControl|llListenRemove|llLoadURL|llLog|llLog10|llLookAt|llLoopSound|llLoopSoundMaster|llLoopSoundSlave|llMD5String|llMakeExplosion|llMakeFire|llMakeFountain|llMakeSmoke|llManageEstateAccess|llMapDestination|llMessageLinked|llMinEventDelay|llModPow|llModifyLand|llMoveToTarget|llName2Key|llNavigateTo|llOffsetTexture|llOpenRemoteDataChannel|llOrd|llOverMyLand|llOwnerSay|llParcelMediaCommandList|llParcelMediaQuery|llParseString2List|llParseStringKeepNulls|llParticleSystem|llPassCollisions|llPassTouches|llPatrolPoints|llPlaySound|llPlaySoundSlave|llPointAt|llPow|llPreloadSound|llPursue|llPushObject|llReadKeyValue|llRefreshPrimURL|llRegionSay|llRegionSayTo|llReleaseCamera|llReleaseControls|llReleaseURL|llRemoteDataReply|llRemoteDataSetRegion|llRemoteLoadScript|llRemoteLoadScriptPin|llRemoveFromLandBanList|llRemoveFromLandPassList|llRemoveInventory|llRemoveVehicleFlags|llReplaceAgentEnvironment|llReplaceEnvironment|llReplaceSubString|llRequestAgentData|llRequestDisplayName|llRequestExperiencePermissions|llRequestInventoryData|llRequestPermissions|llRequestSecureURL|llRequestSimulatorData|llRequestURL|llRequestUserKey|llRequestUsername|llResetAnimationOverride|llResetLandBanList|llResetLandPassList|llResetOtherScript|llResetScript|llResetTime|llReturnObjectsByID|llReturnObjectsByOwner|llRezAtRoot|llRezObject|llRot2Angle|llRot2Axis|llRot2Euler|llRot2Fwd|llRot2Left|llRot2Up|llRotBetween|llRotLookAt|llRotTarget|llRotTargetRemove|llRotateTexture|llRound|llSHA1String|llSHA256String|llSameGroup|llSay|llScaleByFactor|llScaleTexture|llScriptDanger|llScriptProfiler|llSendRemoteData|llSensor|llSensorRemove|llSensorRepeat|llSetAgentEnvironment|llSetAlpha|llSetAngularVelocity|llSetAnimationOverride|llSetBuoyancy|llSetCameraAtOffset|llSetCameraEyeOffset|llSetCameraParams|llSetClickAction|llSetColor|llSetContentType|llSetDamage|llSetEnvironment|llSetForce|llSetForceAndTorque|llSetHoverHeight|llSetKeyframedMotion|llSetLinkAlpha|llSetLinkCamera|llSetLinkColor|llSetLinkMedia|llSetLinkPrimitiveParams|llSetLinkPrimitiveParamsFast|llSetLinkTexture|llSetLinkTextureAnim|llSetLocalRot|llSetMemoryLimit|llSetObjectDesc|llSetObjectName|llSetParcelMusicURL|llSetPayPrice|llSetPhysicsMaterial|llSetPos|llSetPrimMediaParams|llSetPrimURL|llSetPrimitiveParams|llSetRegionPos|llSetRemoteScriptAccessPin|llSetRot|llSetScale|llSetScriptState|llSetSitText|llSetSoundQueueing|llSetSoundRadius|llSetStatus|llSetText|llSetTexture|llSetTextureAnim|llSetTimerEvent|llSetTorque|llSetTouchText|llSetVehicleFlags|llSetVehicleFloatParam|llSetVehicleRotationParam|llSetVehicleType|llSetVehicleVectorParam|llSetVelocity|llShout|llSignRSA|llSin|llSitOnLink|llSitTarget|llSleep|llSound|llSoundPreload|llSqrt|llStartAnimation|llStartObjectAnimation|llStopAnimation|llStopHover|llStopLookAt|llStopMoveToTarget|llStopObjectAnimation|llStopPointAt|llStopSound|llStringLength|llStringToBase64|llStringTrim|llSubStringIndex|llTakeCamera|llTakeControls|llTan|llTarget|llTargetOmega|llTargetRemove|llTargetedEmail|llTeleportAgent|llTeleportAgentGlobalCoords|llTeleportAgentHome|llTextBox|llToLower|llToUpper|llTransferLindenDollars|llTriggerSound|llTriggerSoundLimited|llUnSit|llUnescapeURL|llUpdateCharacter|llUpdateKeyValue|llVecDist|llVecMag|llVecNorm|llVerifyRSA|llVolumeDetect|llWanderWithin|llWater|llWhisper|llWind|llXorBase64|llXorBase64Strings|llXorBase64StringsCorrect|llsRGB2Linear|llIsFriend|llList2ListSlice|llListFindListNext|llListFindStrided|llListSortStrided)\b)'
  validConstants: '(?:\b(TRUE|FALSE|STATUS_PHYSICS|STATUS_PHANTOM|STATUS_ROTATE_X|STATUS_ROTATE_Y|STATUS_ROTATE_Z|STATUS_SANDBOX|STATUS_BLOCK_GRAB|STATUS_BLOCK_GRAB_OBJECT|STATUS_DIE_AT_EDGE|STATUS_RETURN_AT_EDGE|STATUS_CAST_SHADOWS|AGENT|AGENT_BY_USERNAME|AGENT_BY_LEGACY_NAME|ACTIVE|PASSIVE|SCRIPTED|CONTROL_FWD|CONTROL_BACK|CONTROL_LEFT|CONTROL_RIGHT|CONTROL_ROT_LEFT|CONTROL_ROT_RIGHT|CONTROL_UP|CONTROL_DOWN|CONTROL_LBUTTON|CONTROL_ML_LBUTTON|PERMISSION_DEBIT|PERMISSION_TAKE_CONTROLS|PERMISSION_REMAP_CONTROLS|PERMISSION_TRIGGER_ANIMATION|PERMISSION_ATTACH|PERMISSION_RELEASE_OWNERSHIP|PERMISSION_CHANGE_LINKS|PERMISSION_CHANGE_JOINTS|PERMISSION_CHANGE_PERMISSIONS|PERMISSION_TRACK_CAMERA|PERMISSION_CONTROL_CAMERA|PERMISSION_TELEPORT|PERMISSION_SILENT_ESTATE_MANAGEMENT|PERMISSION_OVERRIDE_ANIMATIONS|PERMISSION_RETURN_OBJECTS|DEBUG_CHANNEL|PUBLIC_CHANNEL|AGENT_FLYING|AGENT_ATTACHMENTS|AGENT_SCRIPTED|AGENT_SITTING|AGENT_ON_OBJECT|AGENT_MOUSELOOK|AGENT_AWAY|AGENT_WALKING|AGENT_IN_AIR|AGENT_TYPING|AGENT_CROUCHING|AGENT_BUSY|AGENT_ALWAYS_RUN|AGENT_AUTOPILOT|AGENT_LIST_PARCEL|AGENT_LIST_PARCEL_OWNER|AGENT_LIST_REGION|PSYS_PART_FLAGS|PSYS_PART_START_COLOR|PSYS_PART_START_ALPHA|PSYS_PART_START_SCALE|PSYS_PART_END_COLOR|PSYS_PART_END_ALPHA|PSYS_PART_END_SCALE|PSYS_PART_MAX_AGE|PSYS_PART_INTERP_COLOR_MASK|PSYS_PART_INTERP_SCALE_MASK|PSYS_PART_BOUNCE_MASK|PSYS_PART_WIND_MASK|PSYS_PART_FOLLOW_SRC_MASK|PSYS_PART_FOLLOW_VELOCITY_MASK|PSYS_PART_TARGET_POS_MASK|PSYS_PART_TARGET_LINEAR_MASK|PSYS_PART_EMISSIVE_MASK|PSYS_PART_RIBBON_MASK|PSYS_SRC_PATTERN|PSYS_PART_BF_ONE|PSYS_PART_BF_ZERO|PSYS_PART_BF_DEST_COLOR|PSYS_PART_BF_SOURCE_COLOR|PSYS_PART_BF_ONE_MINUS_DEST_COLOR|PSYS_PART_BF_ONE_MINUS_SOURCE_COLOR|PSYS_PART_BF_SOURCE_ALPHA|PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA|PSYS_SRC_INNERANGLE|PSYS_SRC_OUTERANGLE|PSYS_SRC_ANGLE_BEGIN|PSYS_SRC_ANGLE_END|PSYS_SRC_BURST_RATE|PSYS_SRC_BURST_PART_COUNT|PSYS_SRC_BURST_RADIUS|PSYS_SRC_BURST_SPEED_MIN|PSYS_SRC_BURST_SPEED_MAX|PSYS_SRC_MAX_AGE|PSYS_SRC_ACCEL|PSYS_SRC_TEXTURE|PSYS_SRC_TARGET_KEY|PSYS_SRC_OMEGA|PSYS_SRC_PATTERN_DROP|PSYS_SRC_PATTERN_EXPLODE|PSYS_SRC_PATTERN_ANGLE|PSYS_SRC_PATTERN_ANGLE_CONE|PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY|PSYS_SRC_OBJ_REL_MASK|PSYS_PART_BLEND_FUNC_SOURCE|PSYS_PART_BLEND_FUNC_DEST|PSYS_PART_START_GLOW|PSYS_PART_END_GLOW|OBJECT_UNKNOWN_DETAIL|OBJECT_NAME|OBJECT_DESC|OBJECT_POS|OBJECT_ROT|OBJECT_VELOCITY|OBJECT_OWNER|OBJECT_GROUP|OBJECT_CREATOR|OBJECT_RUNNING_SCRIPT_COUNT|OBJECT_TOTAL_SCRIPT_COUNT|OBJECT_SCRIPT_MEMORY|OBJECT_SCRIPT_TIME|OBJECT_PRIM_EQUIVALENCE|OBJECT_PHYSICS_COST|OBJECT_SERVER_COST|OBJECT_STREAMING_COST|OBJECT_CHARACTER_TIME|OBJECT_ROOT|OBJECT_ATTACHED_POINT|OBJECT_PATHFINDING_TYPE|OBJECT_RENDER_WEIGHT|OBJECT_HOVER_HEIGHT|OBJECT_BODY_SHAPE_TYPE|OBJECT_LAST_OWNER_ID|OBJECT_CLICK_ACTION|OBJECT_OMEGA|OPT_AVATAR|OPT_CHARACTER|OPT_EXCLUSION_VOLUME|OPT_LEGACY_LINKSET|OPT_MATERIAL_VOLUME|OPT_OTHER|OPT_STATIC_OBSTACLE|OPT_WALKABLE|VEHICLE_TYPE_NONE|VEHICLE_TYPE_SLED|VEHICLE_TYPE_CAR|VEHICLE_TYPE_BOAT|VEHICLE_TYPE_AIRPLANE|VEHICLE_TYPE_BALLOON|VEHICLE_REFERENCE_FRAME|VEHICLE_LINEAR_FRICTION_TIMESCALE|VEHICLE_ANGULAR_FRICTION_TIMESCALE|VEHICLE_LINEAR_MOTOR_DIRECTION|VEHICLE_LINEAR_MOTOR_OFFSET|VEHICLE_ANGULAR_MOTOR_DIRECTION|VEHICLE_HOVER_HEIGHT|VEHICLE_HOVER_EFFICIENCY|VEHICLE_HOVER_TIMESCALE|VEHICLE_BUOYANCY|VEHICLE_LINEAR_DEFLECTION_EFFICIENCY|VEHICLE_LINEAR_DEFLECTION_TIMESCALE|VEHICLE_LINEAR_MOTOR_TIMESCALE|VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE|VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY|VEHICLE_ANGULAR_DEFLECTION_TIMESCALE|VEHICLE_ANGULAR_MOTOR_TIMESCALE|VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE|VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY|VEHICLE_VERTICAL_ATTRACTION_TIMESCALE|VEHICLE_BANKING_EFFICIENCY|VEHICLE_BANKING_MIX|VEHICLE_BANKING_TIMESCALE|VEHICLE_FLAG_NO_FLY_UP|VEHICLE_FLAG_NO_DEFLECTION_UP|VEHICLE_FLAG_LIMIT_ROLL_ONLY|VEHICLE_FLAG_HOVER_WATER_ONLY|VEHICLE_FLAG_HOVER_TERRAIN_ONLY|VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT|VEHICLE_FLAG_HOVER_UP_ONLY|VEHICLE_FLAG_LIMIT_MOTOR_UP|VEHICLE_FLAG_MOUSELOOK_STEER|VEHICLE_FLAG_MOUSELOOK_BANK|VEHICLE_FLAG_CAMERA_DECOUPLED|CAMERA_PITCH|CAMERA_FOCUS_OFFSET|CAMERA_POSITION_LAG|CAMERA_FOCUS_LAG|CAMERA_DISTANCE|CAMERA_BEHINDNESS_ANGLE|CAMERA_BEHINDNESS_LAG|CAMERA_POSITION_THRESHOLD|CAMERA_FOCUS_THRESHOLD|CAMERA_ACTIVE|CAMERA_POSITION|CAMERA_FOCUS|CAMERA_POSITION_LOCKED|CAMERA_FOCUS_LOCKED|INVENTORY_TEXTURE|INVENTORY_SOUND|INVENTORY_OBJECT|INVENTORY_SCRIPT|INVENTORY_LANDMARK|INVENTORY_CLOTHING|INVENTORY_NOTECARD|INVENTORY_BODYPART|INVENTORY_ANIMATION|INVENTORY_GESTURE|INVENTORY_MATERIAL|INVENTORY_ALL|INVENTORY_NONE|ATTACH_CHEST|ATTACH_HEAD|ATTACH_LSHOULDER|ATTACH_RSHOULDER|ATTACH_LHAND|ATTACH_RHAND|ATTACH_LFOOT|ATTACH_RFOOT|ATTACH_BACK|ATTACH_PELVIS|ATTACH_MOUTH|ATTACH_CHIN|ATTACH_LEAR|ATTACH_REAR|ATTACH_LEYE|ATTACH_REYE|ATTACH_NOSE|ATTACH_RUARM|ATTACH_RLARM|ATTACH_LUARM|ATTACH_LLARM|ATTACH_RHIP|ATTACH_RULEG|ATTACH_RLLEG|ATTACH_LHIP|ATTACH_LULEG|ATTACH_LLLEG|ATTACH_BELLY|ATTACH_RPEC|ATTACH_LPEC|ATTACH_LEFT_PEC|ATTACH_RIGHT_PEC|ATTACH_HUD_BOTTOM|ATTACH_HUD_BOTTOM_LEFT|ATTACH_HUD_BOTTOM_RIGHT|ATTACH_HUD_CENTER_1|ATTACH_HUD_CENTER_2|ATTACH_HUD_TOP_CENTER|ATTACH_HUD_TOP_LEFT|ATTACH_HUD_TOP_RIGHT|ATTACH_NECK|ATTACH_AVATAR_CENTER|ATTACH_LHAND_RING1|ATTACH_RHAND_RING1|ATTACH_TAIL_BASE|ATTACH_TAIL_TIP|ATTACH_LWING|ATTACH_RWING|ATTACH_FACE_JAW|ATTACH_FACE_LEAR|ATTACH_FACE_REAR|ATTACH_FACE_LEYE|ATTACH_FACE_REYE|ATTACH_FACE_TONGUE|ATTACH_GROIN|ATTACH_HIND_LFOOT|ATTACH_HIND_RFOOT|LAND_LEVEL|LAND_RAISE|LAND_LOWER|LAND_SMOOTH|LAND_NOISE|LAND_REVERT|LAND_SMALL_BRUSH|LAND_MEDIUM_BRUSH|LAND_LARGE_BRUSH|DATA_PAYINFO|DATA_ONLINE|DATA_NAME|DATA_BORN|DATA_RATING|DATA_SIM_POS|DATA_SIM_STATUS|DATA_SIM_RATING|PAYMENT_INFO_ON_FILE|PAYMENT_INFO_USED|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_SET|LINK_ROOT|LINK_ALL_OTHERS|LINK_ALL_CHILDREN|LINK_THIS|CHANGED_INVENTORY|CHANGED_COLOR|CHANGED_SHAPE|CHANGED_SCALE|CHANGED_TEXTURE|CHANGED_LINK|CHANGED_ALLOWED_DROP|CHANGED_OWNER|CHANGED_REGION|CHANGED_TELEPORT|CHANGED_REGION_START|CHANGED_MEDIA|TYPE_INTEGER|TYPE_FLOAT|TYPE_STRING|TYPE_KEY|TYPE_VECTOR|TYPE_ROTATION|TYPE_INVALID|REMOTE_DATA_CHANNEL|REMOTE_DATA_REQUEST|REMOTE_DATA_REPLY|PRIM_TYPE|PRIM_MATERIAL|PRIM_PHYSICS|PRIM_FLEXIBLE|PRIM_POINT_LIGHT|PRIM_TEMP_ON_REZ|PRIM_PHANTOM|PRIM_CAST_SHADOWS|PRIM_POSITION|PRIM_POS_LOCAL|PRIM_SIZE|PRIM_ROTATION|PRIM_ROT_LOCAL|PRIM_TEXTURE|PRIM_COLOR|PRIM_BUMP_SHINY|PRIM_FULLBRIGHT|PRIM_TEXGEN|PRIM_GLOW|PRIM_TEXT|PRIM_NAME|PRIM_DESC|PRIM_OMEGA|PRIM_LINK_TARGET|PRIM_PHYSICS_SHAPE_TYPE|PRIM_SLICE|PRIM_TYPE_BOX|PRIM_TYPE_CYLINDER|PRIM_TYPE_PRISM|PRIM_TYPE_SPHERE|PRIM_TYPE_TORUS|PRIM_TYPE_TUBE|PRIM_TYPE_RING|PRIM_TYPE_SCULPT|PRIM_HOLE_DEFAULT|PRIM_HOLE_SQUARE|PRIM_HOLE_CIRCLE|PRIM_HOLE_TRIANGLE|PRIM_MATERIAL_STONE|PRIM_MATERIAL_METAL|PRIM_MATERIAL_GLASS|PRIM_MATERIAL_WOOD|PRIM_MATERIAL_FLESH|PRIM_MATERIAL_PLASTIC|PRIM_MATERIAL_RUBBER|PRIM_MATERIAL_LIGHT|PRIM_SHINY_NONE|PRIM_SHINY_LOW|PRIM_SHINY_MEDIUM|PRIM_SHINY_HIGH|PRIM_BUMP_NONE|PRIM_BUMP_BRIGHT|PRIM_BUMP_DARK|PRIM_BUMP_WOOD|PRIM_BUMP_BARK|PRIM_BUMP_BRICKS|PRIM_BUMP_CHECKER|PRIM_BUMP_CONCRETE|PRIM_BUMP_TILE|PRIM_BUMP_STONE|PRIM_BUMP_DISKS|PRIM_BUMP_GRAVEL|PRIM_BUMP_BLOBS|PRIM_BUMP_SIDING|PRIM_BUMP_LARGETILE|PRIM_BUMP_STUCCO|PRIM_BUMP_SUCTION|PRIM_BUMP_WEAVE|PRIM_TEXGEN_DEFAULT|PRIM_TEXGEN_PLANAR|PRIM_SCULPT_TYPE_SPHERE|PRIM_SCULPT_TYPE_TORUS|PRIM_SCULPT_TYPE_PLANE|PRIM_SCULPT_TYPE_CYLINDER|PRIM_SCULPT_TYPE_MASK|PRIM_SCULPT_FLAG_INVERT|PRIM_SCULPT_FLAG_MIRROR|PRIM_PHYSICS_SHAPE_PRIM|PRIM_PHYSICS_SHAPE_CONVEX|PRIM_PHYSICS_SHAPE_NONE|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|MASK_BASE|MASK_OWNER|MASK_GROUP|MASK_EVERYONE|MASK_NEXT|PERM_TRANSFER|PERM_MODIFY|PERM_COPY|PERM_MOVE|PERM_ALL|PARCEL_MEDIA_COMMAND_STOP|PARCEL_MEDIA_COMMAND_PAUSE|PARCEL_MEDIA_COMMAND_PLAY|PARCEL_MEDIA_COMMAND_LOOP|PARCEL_MEDIA_COMMAND_LOOP_SET|PARCEL_MEDIA_COMMAND_TEXTURE|PARCEL_MEDIA_COMMAND_URL|PARCEL_MEDIA_COMMAND_TYPE|PARCEL_MEDIA_COMMAND_DESC|PARCEL_MEDIA_COMMAND_TIME|PARCEL_MEDIA_COMMAND_SIZE|PARCEL_MEDIA_COMMAND_AGENT|PARCEL_MEDIA_COMMAND_UNLOAD|PARCEL_MEDIA_COMMAND_AUTO_ALIGN|PAY_HIDE|PAY_DEFAULT|LIST_STAT_MAX|LIST_STAT_MIN|LIST_STAT_MEAN|LIST_STAT_MEDIAN|LIST_STAT_STD_DEV|LIST_STAT_SUM|LIST_STAT_SUM_SQUARES|LIST_STAT_NUM_COUNT|LIST_STAT_GEOMETRIC_MEAN|LIST_STAT_RANGE|PARCEL_FLAG_ALLOW_FLY|PARCEL_FLAG_ALLOW_GROUP_SCRIPTS|PARCEL_FLAG_ALLOW_SCRIPTS|PARCEL_FLAG_ALLOW_LANDMARK|PARCEL_FLAG_ALLOW_TERRAFORM|PARCEL_FLAG_ALLOW_DAMAGE|PARCEL_FLAG_ALLOW_CREATE_OBJECTS|PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS|PARCEL_FLAG_USE_ACCESS_GROUP|PARCEL_FLAG_USE_ACCESS_LIST|PARCEL_FLAG_USE_BAN_LIST|PARCEL_FLAG_USE_LAND_PASS_LIST|PARCEL_FLAG_LOCAL_SOUND_ONLY|PARCEL_FLAG_RESTRICT_PUSHOBJECT|PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY|PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY|REGION_FLAG_ALLOW_DAMAGE|REGION_FLAG_FIXED_SUN|REGION_FLAG_BLOCK_TERRAFORM|REGION_FLAG_SANDBOX|REGION_FLAG_DISABLE_COLLISIONS|REGION_FLAG_DISABLE_PHYSICS|REGION_FLAG_BLOCK_FLY|REGION_FLAG_ALLOW_DIRECT_TELEPORT|REGION_FLAG_RESTRICT_PUSHOBJECT|REGION_FLAG_BLOCK_FLYOVER|HTTP_METHOD|HTTP_MIMETYPE|HTTP_BODY_MAXLENGTH|HTTP_VERIFY_CERT|HTTP_BODY_TRUNCATED|HTTP_CUSTOM_HEADER|HTTP_VERBOSE_THROTTLE|PARCEL_COUNT_TOTAL|PARCEL_COUNT_OWNER|PARCEL_COUNT_GROUP|PARCEL_COUNT_OTHER|PARCEL_COUNT_SELECTED|PARCEL_COUNT_TEMP|PARCEL_DETAILS_NAME|PARCEL_DETAILS_DESC|PARCEL_DETAILS_OWNER|PARCEL_DETAILS_GROUP|PARCEL_DETAILS_AREA|PARCEL_DETAILS_ID|PARCEL_DETAILS_SEE_AVATARS|STRING_TRIM_HEAD|STRING_TRIM_TAIL|STRING_TRIM|CLICK_ACTION_BUY|CLICK_ACTION_IGNORE|CLICK_ACTION_NONE|CLICK_ACTION_OPEN|CLICK_ACTION_OPEN_MEDIA|CLICK_ACTION_PAY|CLICK_ACTION_PLAY|CLICK_ACTION_SIT|CLICK_ACTION_DISABLED|CLICK_ACTION_TOUCH|CLICK_ACTION_ZOOM|TOUCH_INVALID_FACE|PRIM_MEDIA_ALT_IMAGE_ENABLE|PRIM_MEDIA_CONTROLS|PRIM_MEDIA_CURRENT_URL|PRIM_MEDIA_HOME_URL|PRIM_MEDIA_AUTO_LOOP|PRIM_MEDIA_AUTO_PLAY|PRIM_MEDIA_AUTO_SCALE|PRIM_MEDIA_AUTO_ZOOM|PRIM_MEDIA_FIRST_CLICK_INTERACT|PRIM_MEDIA_WIDTH_PIXELS|PRIM_MEDIA_HEIGHT_PIXELS|PRIM_MEDIA_WHITELIST_ENABLE|PRIM_MEDIA_WHITELIST|PRIM_MEDIA_PERMS_INTERACT|PRIM_MEDIA_PERMS_CONTROL|PRIM_MEDIA_PARAM_MAX|PRIM_MEDIA_CONTROLS_STANDARD|PRIM_MEDIA_CONTROLS_MINI|PRIM_MEDIA_PERM_NONE|PRIM_MEDIA_PERM_OWNER|PRIM_MEDIA_PERM_GROUP|PRIM_MEDIA_PERM_ANYONE|PRIM_MEDIA_MAX_URL_LENGTH|PRIM_MEDIA_MAX_WHITELIST_SIZE|PRIM_MEDIA_MAX_WHITELIST_COUNT|PRIM_MEDIA_MAX_WIDTH_PIXELS|PRIM_MEDIA_MAX_HEIGHT_PIXELS|STATUS_OK|STATUS_MALFORMED_PARAMS|STATUS_TYPE_MISMATCH|STATUS_BOUNDS_ERROR|STATUS_NOT_FOUND|STATUS_NOT_SUPPORTED|STATUS_INTERNAL_ERROR|STATUS_WHITELIST_FAILED|CONTENT_TYPE_TEXT|CONTENT_TYPE_HTML|CONTENT_TYPE_XML|CONTENT_TYPE_XHTML|CONTENT_TYPE_ATOM|CONTENT_TYPE_JSON|CONTENT_TYPE_LLSD|CONTENT_TYPE_FORM|CONTENT_TYPE_RSS|KFM_COMMAND|KFM_MODE|KFM_DATA|KFM_FORWARD|KFM_LOOP|KFM_PING_PONG|KFM_REVERSE|KFM_ROTATION|KFM_TRANSLATION|KFM_CMD_PLAY|KFM_CMD_STOP|KFM_CMD_PAUSE|ESTATE_ACCESS_ALLOWED_AGENT_ADD|ESTATE_ACCESS_ALLOWED_AGENT_REMOVE|ESTATE_ACCESS_ALLOWED_GROUP_ADD|ESTATE_ACCESS_ALLOWED_GROUP_REMOVE|ESTATE_ACCESS_BANNED_AGENT_ADD|ESTATE_ACCESS_BANNED_AGENT_REMOVE|PROFILE_NONE|PROFILE_SCRIPT_MEMORY|RCERR_UNKNOWN|RCERR_SIM_PERF_LOW|RCERR_CAST_TIME_EXCEEDED|RC_REJECT_TYPES|RC_DETECT_PHANTOM|RC_DATA_FLAGS|RC_MAX_HITS|RC_REJECT_AGENTS|RC_REJECT_PHYSICAL|RC_REJECT_NONPHYSICAL|RC_REJECT_LAND|RC_GET_NORMAL|RC_GET_ROOT_KEY|RC_GET_LINK_NUM|REQUIRE_LINE_OF_SIGHT|PURSUIT_FUZZ_FACTOR|PURSUIT_INTERCEPT|PURSUIT_GOAL_TOLERANCE|PURSUIT_OFFSET|FORCE_DIRECT_PATH|AVOID_CHARACTERS|AVOID_DYNAMIC_OBSTACLES|AVOID_NONE|PU_EVADE_HIDDEN|PU_EVADE_SPOTTED|PU_FAILURE_INVALID_GOAL|PU_FAILURE_INVALID_START|PU_FAILURE_NO_VALID_DESTINATION|PU_FAILURE_OTHER|PU_FAILURE_TARGET_GONE|PU_FAILURE_UNREACHABLE|PU_GOAL_REACHED|PU_SLOWDOWN_DISTANCE_REACHED|PU_FAILURE_NO_NAVMESH|PU_FAILURE_DYNAMIC_PATHFINDING_DISABLED|PU_FAILURE_PARCEL_UNREACHABLE|TRAVERSAL_TYPE|TRAVERSAL_TYPE_SLOW|TRAVERSAL_TYPE_FAST|TRAVERSAL_TYPE_NONE|CHARACTER_AVOIDANCE_MODE|CHARACTER_CMD_JUMP|CHARACTER_CMD_SMOOTH_STOP|CHARACTER_CMD_STOP|CHARACTER_DESIRED_SPEED|CHARACTER_DESIRED_TURN_SPEED|CHARACTER_LENGTH|CHARACTER_MAX_ACCEL|CHARACTER_MAX_DECEL|CHARACTER_MAX_SPEED|CHARACTER_MAX_TURN_RADIUS|CHARACTER_ORIENTATION|CHARACTER_RADIUS|CHARACTER_TYPE|CHARACTER_TYPE_A|CHARACTER_TYPE_B|CHARACTER_TYPE_C|CHARACTER_TYPE_D|CHARACTER_TYPE_NONE|GCNP_RADIUS|GCNP_STATIC|HORIZONTAL|VERTICAL|PATROL_PAUSE_AT_WAYPOINTS|WANDER_PAUSE_AT_WAYPOINTS|CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES|CHARACTER_STAY_WITHIN_PARCEL|SIM_STAT_PCT_CHARS_STEPPED|HTTP_PRAGMA_NO_CACHE|OBJECT_PHYSICS|OBJECT_PHANTOM|OBJECT_TEMP_ON_REZ|JSON_APPEND|OBJECT_RETURN_PARCEL|OBJECT_RETURN_PARCEL_OWNER|OBJECT_RETURN_REGION|ERR_GENERIC|ERR_PARCEL_PERMISSIONS|ERR_MALFORMED_PARAMS|ERR_RUNTIME_PERMISSIONS|ERR_THROTTLED|PRIM_NORMAL|PRIM_SPECULAR|PRIM_ALPHA_MODE|PRIM_ALPHA_MODE_NONE|PRIM_ALPHA_MODE_BLEND|PRIM_ALPHA_MODE_MASK|PRIM_ALPHA_MODE_EMISSIVE|XP_ERROR_NONE|XP_ERROR_THROTTLED|XP_ERROR_EXPERIENCES_DISABLED|XP_ERROR_INVALID_PARAMETERS|XP_ERROR_NOT_PERMITTED|XP_ERROR_NO_EXPERIENCE|XP_ERROR_NOT_FOUND|XP_ERROR_INVALID_EXPERIENCE|XP_ERROR_EXPERIENCE_DISABLED|XP_ERROR_EXPERIENCE_SUSPENDED|XP_ERROR_UNKNOWN_ERROR|XP_ERROR_QUOTA_EXCEEDED|XP_ERROR_STORE_DISABLED|XP_ERROR_STORAGE_EXCEPTION|XP_ERROR_KEY_NOT_FOUND|XP_ERROR_RETRY_UPDATE|XP_ERROR_MATURITY_EXCEEDED|XP_ERROR_NOT_PERMITTED_LAND|XP_ERROR_REQUEST_PERM_TIMEOUT|PASS_IF_NOT_HANDLED|PASS_ALWAYS|PASS_NEVER|OBJECT_PRIM_COUNT|OBJECT_TOTAL_INVENTORY_COUNT|OBJECT_REZZER_KEY|PRIM_ALLOW_UNSIT|PRIM_SCRIPTED_SIT_ONLY|PRIM_SIT_TARGET|OBJECT_GROUP_TAG|OBJECT_TEMP_ATTACHED|OBJECT_ATTACHED_SLOTS_AVAILABLE|SIT_NOT_EXPERIENCE|SIT_NO_EXPERIENCE_PERMISSION|SIT_NO_SIT_TARGET|SIT_INVALID_AGENT|SIT_INVALID_LINK|SIT_NO_ACCESS|SIT_INVALID_OBJECT|HTTP_USER_AGENT|HTTP_ACCEPT|OBJECT_CREATION_TIME|OBJECT_SELECT_COUNT|OBJECT_SIT_COUNT|SKY_AMBIENT|SKY_TEXTURE_DEFAULTS|SKY_CLOUDS|SKY_DENSITY_PROFILE_COUNTS|SKY_DOME|SKY_GAMMA|SKY_GLOW|SKY_LIGHT|SKY_MOON|SKY_PLANET|SKY_REFRACTION|SKY_STAR_BRIGHTNESS|SKY_SUN|SKY_TRACKS|SKY_ABSORPTION_CONFIG|SKY_MIE_CONFIG|SKY_RAYLEIGH_CONFIG|SKY_CLOUD_TEXTURE|SKY_MOON_TEXTURE|SKY_SUN_TEXTURE|WATER_BLUR_MULTIPLIER|WATER_NORMAL_TEXTURE|WATER_FOG|WATER_FRESNEL|WATER_TEXTURE_DEFAULTS|WATER_NORMAL_SCALE|WATER_REFRACTION|WATER_WAVE_DIRECTION|INVENTORY_SETTING|ENVIRONMENT_DAYINFO|ENV_INVALID_AGENT|ENV_INVALID_RULE|ENV_NOT_EXPERIENCE|ENV_NO_ENVIRONMENT|ENV_NO_EXPERIENCE_PERMISSION|ENV_VALIDATION_FAIL|ENV_NO_EXPERIENCE_LAND|ENV_THROTTLE|OBJECT_ANIMATED_COUNT|OBJECT_ANIMATED_SLOTS_AVAILABLE|OBJECT_ACCOUNT_LEVEL|TARGETED_EMAIL_ROOT_CREATOR|TARGETED_EMAIL_OBJECT_OWNER|CLICK_ACTION_DISABLED|SKY_BLUE|SKY_HAZE|HTTP_EXTENDED_ERROR|PRIM_PROJECTOR|PARCEL_DETAILS_PRIM_CAPACITY|PARCEL_DETAILS_PRIM_USED|PARCEL_DETAILS_LANDING_POINT|PARCEL_DETAILS_LANDING_LOOKAT|PARCEL_DETAILS_TP_ROUTING|PARCEL_DETAILS_FLAGS|PARCEL_DETAILS_SCRIPT_DANGER|TP_ROUTING_BLOCKED|TP_ROUTING_LANDINGP|TP_ROUTING_FREE|OBJECT_MATERIAL|OBJECT_MASS|OBJECT_TEXT|OBJECT_REZ_TIME|OBJECT_LINK_NUMBER|OBJECT_SCALE|OBJECT_TEXT_COLOR|OBJECT_TEXT_ALPHA|STATUS_DIE_AT_NO_ENTRY|ENV_NO_PERMISSIONS|LINKSETDATA_RESET|LINKSETDATA_UPDATE|LINKSETDATA_DELETE|LINKSETDATA_OK|LINKSETDATA_EMEMORY|LINKSETDATA_ENOKEY|LINKSETDATA_EPROTECTED|LINKSETDATA_NOTFOUND|LINKSETDATA_NOUPDATE|SOUND_PLAY|SOUND_LOOP|SOUND_TRIGGER|SOUND_SYNC|SIM_STAT_PHYSICS_FPS|SIM_STAT_AGENT_UPDATES|SIM_STAT_FRAME_MS|SIM_STAT_NET_MS|SIM_STAT_OTHER_MS|SIM_STAT_PHYSICS_MS|SIM_STAT_AGENT_MS|SIM_STAT_IMAGE_MS|SIM_STAT_SCRIPT_MS|SIM_STAT_AGENT_COUNT|SIM_STAT_CHILD_AGENT_COUNT|SIM_STAT_ACTIVE_SCRIPT_COUNT|SIM_STAT_PACKETS_IN|SIM_STAT_PACKETS_OUT|SIM_STAT_ASSET_DOWNLOADS|SIM_STAT_ASSET_UPLOADS|SIM_STAT_UNACKED_BYTES|SIM_STAT_PHYSICS_STEP_MS|SIM_STAT_PHYSICS_SHAPE_MS|SIM_STAT_PHYSICS_OTHER_MS|SIM_STAT_SCRIPT_EPS|SIM_STAT_SPARE_MS|SIM_STAT_SLEEP_MS|SIM_STAT_IO_PUMP_MS|SIM_STAT_SCRIPT_RUN_PCT|SIM_STAT_AI_MS|NULL_KEY|EOF|TEXTURE_BLANK|TEXTURE_DEFAULT|TEXTURE_MEDIA|TEXTURE_PLYWOOD|TEXTURE_TRANSPARENT|IMG_USE_BAKED_AUX1|IMG_USE_BAKED_AUX2|IMG_USE_BAKED_AUX3|IMG_USE_BAKED_EYES|IMG_USE_BAKED_HAIR|IMG_USE_BAKED_HEAD|IMG_USE_BAKED_LEFTARM|IMG_USE_BAKED_LEFTLEG|IMG_USE_BAKED_LOWER|IMG_USE_BAKED_SKIRT|IMG_USE_BAKED_UPPER|URL_REQUEST_GRANTED|URL_REQUEST_DENIED|JSON_INVALID|JSON_OBJECT|JSON_ARRAY|JSON_NUMBER|JSON_STRING|JSON_NULL|JSON_TRUE|JSON_FALSE|JSON_DELETE|PI|TWO_PI|PI_BY_TWO|DEG_TO_RAD|RAD_TO_DEG|SQRT2|ZERO_VECTOR|TOUCH_INVALID_TEXCOORD|TOUCH_INVALID_VECTOR|ZERO_ROTATION|NAK|GAME_CONTROL_AXIS_LEFTX|GAME_CONTROL_AXIS_LEFTY|GAME_CONTROL_AXIS_RIGHTX|GAME_CONTROL_AXIS_RIGHTY|GAME_CONTROL_AXIS_TRIGGERLEFT|GAME_CONTROL_AXIS_TRIGGERRIGHT|GAME_CONTROL_BUTTON_A|GAME_CONTROL_BUTTON_B|GAME_CONTROL_BUTTON_BACK|GAME_CONTROL_BUTTON_DPAD_DOWN|GAME_CONTROL_BUTTON_DPAD_LEFT|GAME_CONTROL_BUTTON_DPAD_RIGHT|GAME_CONTROL_BUTTON_DPAD_UP|GAME_CONTROL_BUTTON_GUIDE|GAME_CONTROL_BUTTON_LEFTSHOULDER|GAME_CONTROL_BUTTON_LEFTSTICK|GAME_CONTROL_BUTTON_MISC1|GAME_CONTROL_BUTTON_PADDLE1|GAME_CONTROL_BUTTON_PADDLE2|GAME_CONTROL_BUTTON_PADDLE3|GAME_CONTROL_BUTTON_PADDLE4|GAME_CONTROL_BUTTON_RIGHTSHOULDER|GAME_CONTROL_BUTTON_RIGHTSTICK|GAME_CONTROL_BUTTON_START|GAME_CONTROL_BUTTON_TOUCHPAD|GAME_CONTROL_BUTTON_X|GAME_CONTROL_BUTTON_Y|PRIM_REFLECTION_PROBE|PRIM_REFLECTION_PROBE_BOX|PRIM_REFLECTION_PROBE_DYNAMIC|PRIM_GLTF_NORMAL|PRIM_GLTF_EMISSIVE|PRIM_GLTF_METALLIC_ROUGHNESS|PRIM_GLTF_BASE_COLOR|PRIM_GLTF_ALPHA_MODE_OPAQUE|PRIM_GLTF_ALPHA_MODE_BLEND|PRIM_GLTF_ALPHA_MODE_MASK|PRIM_RENDER_MATERIAL|REZ_PARAM|REZ_FLAGS|REZ_FLAG_TEMP|REZ_FLAG_PHYSICAL|REZ_FLAG_PHANTOM|REZ_FLAG_DIE_ON_COLLIDE|REZ_FLAG_DIE_ON_NOENTRY|REZ_FLAG_NO_COLLIDE_OWNER|REZ_FLAG_NO_COLLIDE_FAMILY|REZ_FLAG_BLOCK_GRAB_OBJECT|REZ_POS|REZ_ROT|REZ_VEL|REZ_ACCEL|REZ_OMEGA|REZ_DAMAGE|REZ_SOUND|REZ_SOUND_COLLIDE|REZ_LOCK_AXES)\b)'
  validPreprocessor: '(?:\#(?:define|undef|ifdef|ifndef|if|elif|else|endif|warning|error|include)\b)'

contexts:
  # Only the bare minimum is allowed for an empty file.
  main:
    - include: preprocessor
    - include: state
    - include: function
    - include: storage
    - include: identifier
    - include: types
    - include: assignment
    - include: accessor
    - include: squareBracketsGroup
    - include: parenthesesGroup

  prototype:
    - include: comment

  # This gets included from: function
  functionBody:
    - meta_scope: meta.function.body.lsl
    - include: code
    - include: functionEnd

  # This gets included from: state -> stateBody -> event
  eventBody:
    - meta_scope: meta.event.body.lsl meta.brace.curly.lsl
    - include: code
    - include: eventEnd

  # Most top-level syntax definitions belong here.
  code:
    - include: llFunction
    - include: loop
    - include: ifelse
    - include: flowControl
    - include: functionCall
    - include: storage
    - include: identifier
    - include: types
    - include: operators
    - include: parenthesesGroup
    - include: squareBracketsGroup
    - include: bracesGroup

# ---------

  comment:
    - include: commentLineFull # match line start/end for color scheme
    - include: commentBlockFull # match line start/end for color scheme
    - include: commentLine # simpler fallback
    - include: commentBlock # simpler fallback

  commentLine:
    - match: (//)(.*$\n?)
      captures:
        1: comment.line.double-slash.lsl punctuation.definition.comment.begin.lsl
        2: comment.line.double-slash.lsl

  commentBlock:
    - include: commentBlockBegin

  commentBlockBegin:
    - match: /\*
      scope: punctuation.definition.comment.begin.lsl
      push: commentBlockBody

  commentBlockBody:
    - meta_scope: comment.block.lsl
    - include: commentBlockEnd

  commentBlockEnd:
    - match: \*+/
      scope: punctuation.definition.comment.end.lsl
      pop: 1

  commentLineFull:
    - match: (^\s*)(\/\/)(.*$\n)
      captures:
        1: comment.line.double-slash.lsl
        2: comment.line.double-slash.lsl punctuation.definition.comment.begin.lsl
        3: comment.line.double-slash.lsl

  commentBlockFull:
    - match: (^\s*)(\/\*)
      captures:
        1: comment.block.lsl
        2: comment.block.lsl punctuation.definition.comment.begin.lsl
      push: commentBlockBodyFull

  commentBlockBodyFull:
    - meta_scope: comment.block.lsl
    - include: commentBlockFullEnd

  commentBlockFullEnd:
    - match: \*/.*$\n
      scope: punctuation.definition.comment.end.lsl
      pop: 1

# ---------

  parenthesesGroup:
    - include: parenthesesGroupBegin

  parenthesesGroupBegin:
    - match: \(
      scope: meta.brace.round.begin.lsl
      push: parenthesesGroupBody

  parenthesesGroupBody:
    - meta_scope: meta.brace.round.lsl
    - include: code
    - include: parenthesesGroupEnd

  parenthesesGroupEnd:
    - match: \)
      scope: meta.brace.round.end.lsl
      pop: 1
    - include: code

# ---------

  bracesGroup:
    - include: bracesGroupBegin

  bracesGroupBegin:
    - match: \{
      scope: meta.brace.curly.begin.lsl punctuation.section.block.begin.lsl
      push: bracesGroupBody

  bracesGroupBody:
    - meta_scope: meta.brace.curly.lsl
    - include: code
    - include: bracesGroupEnd

  bracesGroupEnd:
    - match: \}
      scope: meta.brace.curly.end.lsl punctuation.section.block.end.lsl
      pop: 1
    - include: code

# ---------

  squareBracketsGroup:
    - include: squareBracketsGroupBegin

  squareBracketsGroupBegin:
    - match: \[
      scope: meta.brace.square.begin.lsl
      push: squareBracketsGroupBody

  squareBracketsGroupBody:
    - meta_scope: meta.brace.square.lsl
    - include: types
    - include: squareBracketsGroupEnd

  squareBracketsGroupEnd:
    - match: \]
      scope: meta.brace.square.end.lsl
      pop: 1
    - include: code

# ---------

  vector:
    - match: |-
        (?x:
          <
            \s*(?:({{validSign}}?{{validNumber}})|({{validSign}}?{{validIdentifier}}))\s*,
            \s*(?:({{validSign}}?{{validNumber}})|({{validSign}}?{{validIdentifier}}))\s*,
            \s*(?:({{validSign}}?{{validNumber}})|({{validSign}}?{{validIdentifier}}))\s*
            \s*
          >
        )
      captures:
        0: constant.numeric.complex.vector.lsl
        1: constant.numeric.lsl
        3: variable.lsl
        4: constant.numeric.lsl
        6: variable.lsl
        7: constant.numeric.lsl
        9: variable.lsl

# ---------

  rotation:
    - match: |-
        (?x:
          <
            \s*(?:({{validSign}}?{{validNumber}})|({{validSign}}?{{validIdentifier}})),
            \s*(?:({{validSign}}?{{validNumber}})|({{validSign}}?{{validIdentifier}})),
            \s*(?:({{validSign}}?{{validNumber}})|({{validSign}}?{{validIdentifier}})),
            \s*(?:({{validSign}}?{{validNumber}})|({{validSign}}?{{validIdentifier}}))
            \s*
          >
        )
      captures:
        0: constant.numeric.complex.rotation.lsl
        1: constant.numeric.lsl
        3: variable.lsl
        4: constant.numeric.lsl
        6: variable.lsl
        7: constant.numeric.lsl
        9: variable.lsl
        10: constant.numeric.lsl
        12: variable.lsl

# ---------

  string:
    - include: stringBegin

  stringBegin:
    - match: \"
      scope: punctuation.definition.string.begin.lsl
      push: stringBody

  stringBody:
    - meta_include_prototype: false
    - meta_scope: string.lsl string.quoted.double.lsl
    - include: stringEnd
    - include: escapeCharacter

  stringEnd:
    - match: \"
      scope: punctuation.definition.string.end.lsl
      pop: 1

# ---------

  state:
    - match: default
      scope: entity.name.class.lsl
      push: stateBegin
    - match: state\s+({{validIdentifier}})
      captures:
        1: entity.name.class.lsl
      push: stateBegin

  stateBegin:
    - match: \{
      scope: meta.state.block.begin.lsl
      push: stateBody
      pop: 1

  stateBody:
    - meta_scope: meta.state.body.lsl meta.brace.curly.lsl
    - include: event
    - include: stateEnd

  stateEnd:
    - match: \}
      scope: meta.state.block.begin.lsl
      pop: 1

# ---------

  event:
    - match: '{{validEvents}}'
      scope: entity.name.function.lsl
      push: eventParamsBegin

  eventParamsBegin:
    - match: \s*
    - match: \(
      scope: meta.brace.round.begin.lsl punctuation.section.function.begin.lsl
      push: eventParamsBody
      pop: 1

  eventParamsBody:
    - meta_scope: meta.function.parameters.lsl
    - match: \s*
      push: eventParameter
    - include: eventParamsEnd

  eventParameter:
    - include: storage
    - match: '((?<!\.){{validIdentifier}})(,?)'
      captures:
        1: meta.event.body.lsl variable.parameter.lsl
        2: punctuation.separator.parameter.event.lsl
    - include: eventParamsEnd

  eventParamsEnd:
    - match: \)
      scope: meta.brace.round.end.lsl punctuation.section.function.end.lsl
      pop: 2
      set: eventBegin

  eventBegin:
    - match: \{
      scope: meta.brace.curly.begin.lsl meta.event.block.begin.lsl
      push: eventBody
      pop: 1

  eventEnd:
    - match: \}
      scope: meta.brace.curly.end.lsl meta.event.block.end.lsl
      pop: 1

# ---------

  function:
    - match: '({{validIdentifier}})(\s*\()'
      captures:
        1: support.function.lsl
        2: meta.function.parameters.lsl punctuation.section.function.begin.lsl
      push: functionParamsBegin

  functionParamsBegin:
    - match: ''
      push: functionParamsBody
      pop: 1

  functionParamsBody:
    - meta_scope: meta.function.parameters.lsl
    - match: \s*
      push: functionParameter
    - include: functionParamsEnd

  functionParameter:
    - include: storage
    - match: '((?<!\.){{validIdentifier}})(,?)'
      captures:
        1: variable.parameter.lsl
        2: punctuation.separator.parameter.function.lsl
    - include: functionParamsEnd

  functionParamsEnd:
    - match: \)
      scope: punctuation.section.function.end.lsl
      pop: 2
      set: functionBegin

  functionBegin:
    - match: \{
      scope: meta.function.block.begin.lsl
      push: functionBody
      pop: 1

  functionEnd:
    - match: \}
      scope: meta.function.block.end.lsl
      pop: 1

# ---------

  functionCall:
    - match: '({{validIdentifier}})(\s*\()'
      captures:
        1: support.function.call.lsl
        2: meta.function.parameters.lsl punctuation.section.function.begin.lsl
      push: functionCallParamsBegin

  functionCallParamsBegin:
    - match: ''
      push: functionCallParamsBody
      pop: 1

  functionCallParamsBody:
    - meta_scope: meta.function.parameters.lsl
    - match: \s*
      push: functionCallParameter
    - include: functionCallParamsEnd

  functionCallParameter:
    - include: storage
    - include: llFunction
    - include: functionCall
    - include: parenthesesGroup
    - include: squareBracketsGroup
    - match: '((?<!\.){{validIdentifier}})(,?)'
      captures:
        1: variable.parameter.lsl
        2: punctuation.separator.parameter.function.lsl
    - include: functionCallParamsEnd

  functionCallParamsEnd:
    - match: \)
      scope: punctuation.section.function.end.lsl
      pop: 2
      branch_point: functionCallParamsClosed
      push: functionCalled

  functionCalled:
    - match: ''
      pop: 1

# ---------

  expressionParentheses:
    - match: \(
      scope: punctuation.section.group.begin.lsl
      set:
        - meta_scope: meta.group.lsl
        - match: \)
          scope: punctuation.section.group.end.lsl
          pop: 1
        - match: (?=\S)
          push: expression

  expression:
    - meta_include_prototype: false
    - match: ''
      set:
        - expressionEnd
        - expressionBegin

  expressionBegin:
    - include: parenthesesGroup
    - include: expressionBreak
    - include: types
    - include: identifier
    - include: function
    - include: operators
    - include: squareBracketsGroup
    - include: typecast

  expressionEnd:
    - include: expressionBreak
    - include: accessor
    - match: (?=\S)
      pop: 1

  expressionBreak:
    - match: (?=[;})\]])
      pop: 1

# ---------

  ifelse:
    - match: (\b(?:else if)\b)\s*(\()
      captures:
        1: keyword.control.flow.elseif.lsl
        2: keyword.control.flow.expression.lsl keyword.control.flow.expression.begin.lsl
      push:
        - ifelseExpressionBegin
    - match: (\b(?:else)\b)\s*(\()
      captures:
        1: keyword.control.flow.else.lsl
        2: keyword.control.flow.expression.lsl keyword.control.flow.expression.begin.lsl
      push:
        - ifelseExpressionBegin
    - match: (\b(?:if)\b)\s*(\()
      captures:
        1: keyword.control.flow.if.lsl
        2: keyword.control.flow.expression.lsl keyword.control.flow.expression.begin.lsl
      push:
        - ifelseExpressionBegin

  ifelseExpressionBegin:
    - match: ''
      push: ifelseExpressionBody
      pop: 1

  ifelseExpressionBody:
    - meta_scope: keyword.control.flow.expression.lsl meta.brace.round.lsl
    - include: code
    - include: ifelseExpressionEnd

  ifelseExpressionEnd:
    - match: \)
      scope: keyword.control.flow.expression.end.lsl
      pop: 1

# ---------

  loop:
    - include: whileLoop
    - include: forLoop
    - include: doLoop

  whileLoop:
    - match: \bwhile\b
      scope: keyword.control.flow.loop.while.lsl
      push:
        - whileLoopBegin
        - expressionParentheses

  forLoop:
    - match: \bfor\b
      scope: keyword.control.flow.loop.for.lsl
      push:
        - forLoopBegin
        - expressionParentheses

  whileLoopBegin:
    - meta_scope: meta.loop.statement.while.lsl
    - match: \{
      scope: punctuation.section.while.loop.begin.lsl
      push: whileLoopBody
      pop: 1

  whileLoopBody:
    - meta_scope: meta.loop.lsl
    - include: code
    - include: whileLoopEnd

  whileLoopEnd:
    - match: \}
      scope: punctuation.section.while.loop.end.lsl
      pop: 1

  forLoopBegin:
    - meta_scope: meta.loop.statement.for.lsl
    - match: \{
      scope: punctuation.section.for.loop.begin.lsl
      push: forLoopBody
      pop: 1

  forLoopBody:
    - meta_scope: meta.loop.lsl
    - include: code
    - include: forLoopEnd

  forLoopEnd:
    - match: \}
      scope: punctuation.section.for.loop.end.lsl
      pop: 1

  doLoop:
    - match: \bdo\b
      scope: keyword.control.flow.loop.do.lsl
      push:
        - doLoopBegin

  doLoopBegin:
    - meta_scope: meta.loop.statement.do.lsl
    - match: \{
      scope: punctuation.section.do.loop.begin.lsl
      push: doLoopBody

  doLoopBody:
    - meta_scope: meta.loop.lsl
    - include: code
    - include: doLoopEnd

  doLoopEnd:
    - match: \}
      scope: punctuation.section.do.loop.end.lsl
      push:
        - doLoopCondition
      pop: 1

  doLoopCondition:
    - match: \bwhile\b
      scope: keyword.control.flow.loop.do.lsl
      push:
        - doLoopExpressionParentheses

  doLoopExpressionParentheses:
    - match: \(
      scope: punctuation.section.group.begin.lsl
      set:
        - meta_scope: meta.group.lsl
        - match: \)
          scope: punctuation.section.group.end.lsl
          pop: 3
        - match: (?=\S)
          push: expression

# ---------

  types:
    - include: vector
    - include: rotation
    - include: number
    - include: string

  operators:
    - include: assignment
    - include: unaryOperators
    - include: binaryOperators
    - include: accessor
    - include: typecast

  unaryOperators:
    - match: '~'
      scope: keyword.operator.bitwise.not.lsl
    - match: '!(?!=)'
      scope: keyword.operator.logical.not.lsl
    - match: --(?!-)
      scope: keyword.operator.arithmetic.decrement.lsl
    - match: \+\+(?!\+)
      scope: keyword.operator.arithmetic.increment.lsl

  binaryOperators:
    - match: |-
        (?x: && | \|\| )
      scope: keyword.operator.logical.lsl
    - match: |-
        (?x: << | >> )
      scope: keyword.operator.bitwise.shift.lsl
    - match: |-
        (?x: == | != | <= | >= | < | > )
      scope: keyword.operator.comparison.lsl
    - match: \&
      scope: keyword.operator.bitwise.and.lsl
    - match: \|
      scope: keyword.operator.bitwise.or.lsl
    - match: \^
      scope: keyword.operator.bitwise.xor.lsl
    - match: |-
        (?x: \/ | \% | \* | \+(?!\+) | \-(?!\-) )
      scope: keyword.operator.arithmetic.lsl

  comma:
    - match: ','
      scope: keyword.operator.comma.lsl

  assignment:
    - match: =(?!=)
      scope: keyword.operator.assignment.lsl
    - match: |-
        (?x: \/= | \%= | \*= | \+= | \-= )
      scope: keyword.operator.assignment.augmented.lsl

  typecast:
    - match: '\({{validTypes}}\)'
      scope: keyword.operator.typecast.lsl

  accessor:
    - match: (\.)([xyzs]\b)
      captures:
        1: punctuation.accessor.lsl
        2: variable.lsl variable.other.member.lsl

# ---------

  storage:
    - match: '{{validTypes}}'
      scope: storage.type.lsl

  identifier:
    - match: '{{validConstants}}'
      scope: constant.language.lsl
    - match: '(?<!\.){{validIDENTIFIER}}'
      scope: variable.constant.lsl
    - match: '(?<!\.){{validIdentifier}}'
      scope: variable.lsl

  number:
    - include: integer
    - include: float

  integer:
    - match: '(?<!\.){{validSign}}?{{validInteger}}(?!\.)'
      scope: constant.numeric.integer.decimal.lsl
    - include: hexadecimal

  hexadecimal:
    - match: '{{validSign}}?{{validHexadecimal}}'
      scope: constant.numeric.integer.hexadecimal.lsl

  float:
    - match: '{{validSign}}?{{validFloat}}'
      scope: meta.number.float.decimal.lsl constant.numeric.value.lsl constant.numeric.float.decimal.lsl

  escapeCharacter:
    - match: \\n
      scope: constant.character.escape.newline.lsl
    - match: \\.
      scope: constant.character.escape.lsl

# ---------

  flowControl:
    - match: (?:\bjump\s+{{validIdentifier}}\s*;)
      scope: keyword.control.flow.jump.in.lsl
    - match: (?:\@\s*{{validIdentifier}}\s*;)
      scope: keyword.control.flow.jump.out.lsl
    - match: \b(?:for|do)\b
      scope: keyword.control.flow.loop.lsl
    - match: \b(?:if|else)\b
      scope: keyword.control.flow.conditional.lsl
    - match: \b(?:return)\b
      scope: keyword.control.flow.return.lsl

# ---------

  llFunction:
    - match: '{{validFunctions}}'
      scope: support.function.builtin.lsl

# ---------

  # This prevents any other context on the same line. Todo.
  preprocessor:
    - meta_include_prototype: false
    - match: '{{validPreprocessor}}.*$'
      scope: preprocessor.lsl

# ---------
